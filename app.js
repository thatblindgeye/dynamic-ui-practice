!function(){"use strict";(()=>{const e=document.querySelector(".more-links-button"),t=document.querySelector(".more-container"),n=document.querySelector(".more-links"),r=()=>{0===n.children.length?(t.style.display="none",e.setAttribute("aria-expanded","false"),n.classList.remove("visible")):t.style.display="block"},s=()=>{const e=document.getElementById("upper-nav").offsetWidth,r=t.offsetWidth+10*parseFloat(getComputedStyle(document.documentElement).fontSize),a=document.querySelector(".primary-links"),i=document.querySelectorAll(".primary-links > li:not(.more-container)"),o=i.length;if(a.offsetWidth>=e-r&&o)n.children.length?n.insertBefore(i[o-1],n.children[0]):n.appendChild(i[o-1]),s();else{if(!n.children.length)return;a.insertBefore(n.children[0],t)}};s(),r(),window.addEventListener("resize",(()=>{s(),r()}));const a=document.getElementsByClassName("dropdown-button"),i=document.getElementsByClassName("dropdown-links"),o=()=>{Array.from(i).forEach((e=>{e.classList.contains("visible")?(e.previousElementSibling.setAttribute("aria-expanded","true"),e.previousElementSibling.children[0].textContent="expand_less"):(e.previousElementSibling.setAttribute("aria-expanded","false"),e.previousElementSibling.children[0].textContent="expand_more")}))},l=e=>{Array.from(i).forEach((t=>{t===e.target.nextElementSibling||e.target.parentElement.parentElement.classList.contains("dropdown-links")||t.classList.remove("visible")})),o()},c=e=>{e.target.nextElementSibling.classList.toggle("visible"),o()};Array.from(a).forEach((e=>{e.addEventListener("click",(e=>{l(e),c(e)}))})),Array.from(a).forEach((e=>{e.addEventListener("keydown",(e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),l(e),c(e))}))})),window.addEventListener("click",(e=>{e.target.classList.contains("dropdown-button")||Array.from(i).forEach((e=>{e.classList.remove("visible")})),o()})),window.addEventListener("keydown",(e=>{"Escape"===e.key&&(Array.from(i).forEach((e=>{e.classList.remove("visible")})),o())})),window.addEventListener("keydown",(e=>{"Tab"===e.key&&(e=>{const t=document.querySelector(".visible");if(t){const n=t.children,r=n[n.length-1].children[0];document.activeElement!==r||e.shiftKey?document.activeElement===t.previousElementSibling&&e.shiftKey&&(r.focus(),e.preventDefault()):(t.previousElementSibling.focus(),e.preventDefault())}})(e)}))})(),(()=>{const e=[{url:"assets/images/kate-stone-matheson-uy5t-CJuIK4-unsplash.jpg",alt:"A mostly white cat sleeping beneath bed covers.","credit link":"https://unsplash.com/@kstonematheson","credit name":"Kate Stone Matheson on Unsplash"},{url:"assets/images/daria-shatova-46TvM-BVrRI-unsplash.jpg",alt:"A small cat laying upside down, staring into the camera with their paws stretched out.","credit link":"https://unsplash.com/@dariasha911","credit name":"Daria Shatova on Unsplash"},{url:"assets/images/jae-park-7GX5aICb5i4-unsplash.jpg",alt:"A white and tan cat looking into the camera with their mouth open mid-meow.","credit link":"https://unsplash.com/@jaehunpark","credit name":"Jae Park on Unsplash"},{url:"assets/images/justin-sinclair-0ptOFauN7n8-unsplash.jpg",alt:"Two calico cats, one walking towards the camera and the other sitting and staring at a wall.","credit link":"https://unsplash.com/@justinsinclair","credit name":"Justin Sinclair on Unsplash"},{url:"assets/images/marko-blazevic-zBvVuRJ71vU-unsplash.jpg",alt:"A gray cat standing on their hind legs, with their front paws bent in front of them.","credit link":"https://unsplash.com/@kerber","credit name":"Marko Blažević on Unsplash"}];e.forEach(((e,t)=>{const n=document.createElement("span");n.className="dot",n.setAttribute("role","button"),n.setAttribute("tabindex","0"),n.setAttribute("aria-label",`select image ${t+1}`),document.querySelector(".slider-dots").appendChild(n)}));const t=document.getElementsByClassName("dot"),n=(e,t)=>{i=e,h()};Array.from(t).forEach(((e,t)=>{e.addEventListener("click",(()=>{n(t)})),e.addEventListener("keydown",(e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),n(t))}))}));const r=document.querySelector(".next-arrow"),s=document.querySelector(".previous-arrow"),a=e=>{console.log(e.currentTarget),e.currentTarget===r?(c(),h()):e.currentTarget===s&&(d(),h())};r.addEventListener("click",a),r.addEventListener("keydown",(e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),a(e))})),s.addEventListener("click",a),s.addEventListener("keydown",(e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),a(e))}));let i=0;const o=document.querySelector(".current-image"),l=()=>{const n=document.querySelector("#credit-link");var r;o.setAttribute("src",e[i].url),o.setAttribute("alt",e[i].alt),n.setAttribute("href",e[i]["credit link"]),n.textContent=e[i]["credit name"],r=i,Array.from(t).forEach((e=>{e.classList.remove("active-dot")})),t[r].classList.add("active-dot")},c=()=>{i===e.length-1?i=0:i++},d=()=>{0===i?i=e.length-1:i-=1};let u;const m=e=>{u?(clearInterval(u),u=null):u=setInterval((function(){c(),l()}),5e3)},h=()=>{u&&m(),l(),m()};l(),m(),o.addEventListener("click",m),o.addEventListener("keydown",(e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),m())}))})(),(()=>{const e=document.querySelector(".theme-toggle"),t=document.querySelector(".github-logo"),n=()=>{"dark"===document.documentElement.getAttribute("theme")?(document.documentElement.setAttribute("theme","light"),t.setAttribute("src","assets/GitHub-Mark-32px.png")):(document.documentElement.setAttribute("theme","dark"),t.setAttribute("src","assets/GitHub-Mark-Light-32px.png"))};n(),e.addEventListener("click",n),e.addEventListener("keydown",(e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),n())}))})()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,